--1
DECLARE
	SAL NUMBER;
	OLD_SAL NUMBER;
	YEARS NUMBER;
	ENAME VARCHAR2(50);
	ID NUMBER;
	COUN NUMBER;
BEGIN
	COUN:=0;
	FOR R IN (SELECT E1.LAST_NAME LNAME, E1.SALARY OSAL, E1.DEPARTMENT_ID DID, E1.HIRE_DATE 		HDATE, E1.EMPLOYEE_ID EID
			FROM EMPLOYEES E1, EMPLOYEES E2
		WHERE E1.EMPLOYEE_ID=E2.MANAGER_ID)
	LOOP
		OLD_SAL := R.OSAL;
		ENAME := R.LNAME;
		ID := R.DID;
		YEARS := ROUND(MONTHS_BETWEEN(SYSDATE, R.HDATE)/12,0);
		IF YEARS>=24 THEN
			COUN:=COUN+1;
			UPDATE EMPLOYEES SET SALARY= OLD_SAL * 1.15 WHERE EMPLOYEE_ID=R.EID;
			SAL:=OLD_SAL*1.15;
			DBMS_OUTPUT.PUT_LINE(ENAME||' '||ID||' '|| OLD_SAL||' '|| SAL);
		END IF;
	END LOOP;
	COMMIT;
 DBMS_OUTPUT.PUT_LINE(COUN);
END;
/


--2

CREATE OR REPLACE PROCEDURE  INTERCHANGE_SALARY(EID1 IN VARCHAR2, EID2 IN VARCHAR2) IS
	SAL1 NUMBER;
	SAL2 NUMBER;
	OSAL1 NUMBER;
	OSAL2 NUMBER;
BEGIN
	SELECT SALARY INTO OSAL1 FROM EMPLOYEES WHERE EMPLOYEE_ID=EID1;
	SELECT SALARY INTO OSAL2 FROM EMPLOYEES WHERE EMPLOYEE_ID=EID2;
	SAL1:=OSAL2;
	SAL2:=OSAL1;
	UPDATE EMPLOYEES SET SALARY=SAL1 WHERE EMPLOYEE_ID=EID1;
	UPDATE EMPLOYEES SET SALARY=SAL2 WHERE EMPLOYEE_ID=EID2;
	COMMIT;
	DBMS_OUTPUT.PUT_LINE(EID1|| ' '|| OSAL1 || ' '|| SAL1);
	DBMS_OUTPUT.PUT_LINE(EID2|| ' '|| OSAL2 || ' '|| SAL2);
	EXCEPTION
	WHEN NO_DATA_FOUND THEN
		DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
	WHEN OTHERS THEN
		DBMS_OUTPUT.PUT_LINE('I DONT KNOW');
END;
/

BEGIN
	INTERCHANGE_SALARY(100,101);
END;
/

--3
CREATE OR REPLACE FUNCTION FINDING
RETURN NUMBER IS
	YEARS NUMBER;
	CNT NUMBER;
	EID NUMBER;
BEGIN
	CNT:=0;
	FOR R IN (SELECT HIRE_DATE,EMPLOYEE_ID FROM EMPLOYEES WHERE DEPARTMENT_ID=(SELECT DEPARTMENT_ID 		FROM DEPARTMENTS WHERE DEPARTMENT_NAME='Accounting'))
	LOOP
		EID:=R.EMPLOYEE_ID;
		YEARS := ROUND(MONTHS_BETWEEN(SYSDATE, R.HIRE_DATE)/12,0);
		IF YEARS>20 THEN
			DBMS_OUTPUT.PUT_LINE(EID||' HAS BEEN WORKING FOR MORE THAN 20 YEARS');
			CNT:=CNT+1;
		END IF;
	END LOOP;
	RETURN CNT;
END;
/

--4
CREATE  TABLE EMPLOYEE_2
As
SELECT  *
FROM EMPLOYEES;


CREATE OR REPLACE TRIGGER NO_DEC
BEFORE UPDATE
ON EMPLOYEE_2
FOR EACH ROW
DECLARE

BEGIN
	IF :NEW.SALARY<:OLD.SALARY THEN
		RAISE_APPLICTION_ERROR(-20001,'NEW SALARY IS LESS THAN PREVIOUS SALARY');
	END IF;
END;
/